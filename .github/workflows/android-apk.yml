name: Android APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      EXPO_NO_DOCTOR: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm install

      # --- (OPTION SÛRE) app.json minimal sans images pour éviter tout bug Jimp ---
      - name: Write minimal app.json (no images)
        run: |
          if [ -f app.json ]; then cp app.json app.json.bak || true; fi
          node -e "const fs=require('fs');const j={expo:{name:'Skilldrive',slug:'skilldrive',version:'1.0.0',android:{package:'com.skilldrive.app'}}};fs.writeFileSync('app.json',JSON.stringify(j,null,2));"
          cat app.json

      # --- Génère android/ ---
      - name: Prebuild (Expo → create android/)
        run: npx expo prebuild -p android

      # --- Force les versions SDK (compile/target/min) après prebuild ---
      - name: Force Android SDK versions (gradle.properties + app/build.gradle)
        run: |
          # gradle.properties (racine android/)
          GP=android/gradle.properties
          touch "$GP"
          grep -q '^android.useAndroidX=' "$GP" || echo 'android.useAndroidX=true' >> "$GP"
          grep -q '^android.enableJetifier=' "$GP" || echo 'android.enableJetifier=true' >> "$GP"
          sed -i 's/^android\.compileSdkVersion=.*/android.compileSdkVersion=34/; t; $ a android.compileSdkVersion=34' "$GP"
          sed -i 's/^android\.targetSdkVersion=.*/android.targetSdkVersion=34/; t; $ a android.targetSdkVersion=34' "$GP"
          sed -i 's/^android\.minSdkVersion=.*/android.minSdkVersion=23/; t; $ a android.minSdkVersion=23' "$GP"
          echo "===== android/gradle.properties ====="
          cat "$GP"

          # app/build.gradle (module app)
          AB=android/app/build.gradle
          # compileSdkVersion
          if grep -q 'compileSdkVersion' "$AB"; then
            sed -i 's/compileSdkVersion[[:space:]]\+[0-9]\+/compileSdkVersion 34/' "$AB"
          else
            sed -i '0,/android[[:space:]]*{/{s//android {\n    compileSdkVersion 34/}' "$AB"
          fi
          # min/targetSdkVersion dans defaultConfig
          if grep -q 'minSdkVersion' "$AB"; then
            sed -i 's/minSdkVersion[[:space:]]\+[0-9]\+/minSdkVersion 23/' "$AB"
          else
            sed -i '0,/defaultConfig[[:space:]]*{/{s//defaultConfig {\n        minSdkVersion 23/}' "$AB"
          fi
          if grep -q 'targetSdkVersion' "$AB"; then
            sed -i 's/targetSdkVersion[[:space:]]\+[0-9]\+/targetSdkVersion 34/' "$AB"
          else
            sed -i '0,/defaultConfig[[:space:]]*{/{s//defaultConfig {\n        targetSdkVersion 34/}' "$AB"
          fi

          echo "===== android/app/build.gradle (extract) ====="
          sed -n '1,200p' "$AB"

      # --- Patch EXPO pour éviter l'erreur 'components.release' (idempotent) ---
      - name: Patch ExpoModulesCorePlugin.gradle (idempotent)
        run: |
          FILE=node_modules/expo-modules-core/android/ExpoModulesCorePlugin.gradle
          if [ -f "$FILE" ]; then
            echo "Patching $FILE"
            # Remplacer 'from components.release' par une source sûre
            node -e "const fs=require('fs'),p=process.env.F;let s=fs.readFileSync(p,'utf8');s=s.replace(/from\\s+components\\.release/g,'from (components.findByName(\"release\") || components.findByName(\"default\") || components.first())');fs.writeFileSync(p,s);" F="$FILE"
            # Ajouter singleVariant('release') uniquement si ABSENT (évite le 'multiple times')
            node -e "const fs=require('fs'),p=process.env.F;let s=fs.readFileSync(p,'utf8');if(!/singleVariant\\(\\s*\"release\"\\s*\\)/.test(s)){s=s.replace(/android\\s*\\{/, 'android {\\n    publishing {\\n      singleVariant(\"release\")\\n    }');fs.writeFileSync(p,s);}"; F="$FILE"
            echo "===== Patched snippet ====="
            sed -n '1,140p' "$FILE"
          else
            echo "ExpoModulesCorePlugin.gradle introuvable — on continue."
          fi

      - name: Gradle permissions
        run: chmod +x android/gradlew

      - name: Build Debug APK
        run: cd android && ./gradlew --no-daemon assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: skilldrive-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
