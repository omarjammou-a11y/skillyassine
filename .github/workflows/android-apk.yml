name: Android APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      EXPO_NO_DOCTOR: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm install

      # 1) Génère android/ sans images (on a déjà contourné l’erreur Jimp)
      - name: Prebuild (Expo → create android/)
        run: npx expo prebuild -p android

      # 2) Force les versions SDK (compile/target/min) après prebuild
      - name: Force Android SDK versions (gradle.properties + app/build.gradle)
        run: |
          # gradle.properties (racine android/)
          GP=android/gradle.properties
          touch "$GP"
          grep -q '^android.useAndroidX=' "$GP" || echo 'android.useAndroidX=true' >> "$GP"
          grep -q '^android.enableJetifier=' "$GP" || echo 'android.enableJetifier=true' >> "$GP"
          sed -i 's/^android\.compileSdkVersion=.*/android.compileSdkVersion=34/; t; $ a android.compileSdkVersion=34' "$GP"
          sed -i 's/^android\.targetSdkVersion=.*/android.targetSdkVersion=34/; t; $ a android.targetSdkVersion=34' "$GP"
          sed -i 's/^android\.minSdkVersion=.*/android.minSdkVersion=23/; t; $ a android.minSdkVersion=23' "$GP"
          cat "$GP"

          # app/build.gradle (module app)
          AB=android/app/build.gradle
          # compileSdkVersion
          if grep -q 'compileSdkVersion' "$AB"; then
            sed -i 's/compileSdkVersion[[:space:]]\+[0-9]\+/compileSdkVersion 34/' "$AB"
          else
            sed -i '0,/android[[:space:]]*{/{s//android {\n    compileSdkVersion 34/}' "$AB"
          fi
          # min/targetSdkVersion dans defaultConfig
          sed -i 's/minSdkVersion[[:space:]]\+[0-9]\+/minSdkVersion 23/' "$AB"
          if grep -q 'targetSdkVersion' "$AB"; then
            sed -i 's/targetSdkVersion[[:space:]]\+[0-9]\+/targetSdkVersion 34/' "$AB"
          else
            sed -i '0,/defaultConfig[[:space:]]*{/{s//defaultConfig {\n        targetSdkVersion 34/}' "$AB"
          fi

          echo "===== android/app/build.gradle (extract) ====="
          sed -n '1,160p' "$AB"

      # 3) Patch de robustesse sur ExpoModulesCorePlugin (évite l'erreur components.release)
      - name: Patch ExpoModulesCorePlugin.gradle (safe release component)
        run: |
          FILE=node_modules/expo-modules-core/android/ExpoModulesCorePlugin.gradle
          if [ -f "$FILE" ]; then
            echo "Patching $FILE"
            # Remplace "from components.release" par une vérification sûre
            sed -i 's/from components\.release/from (components.findByName("release") ?: components.findByName("default") ?: components.first())/' "$FILE"
            # Et si nécessaire, assure la déclaration singleVariant("release") dans les modules library
            sed -i 's/android {$/android {\n    publishing {\n      singleVariant("release")\n    }/' "$FILE"
            tail -n +1 "$FILE" | sed -n '1,140p'
          else
            echo "ExpoModulesCorePlugin.gradle non trouvé (version Expo différente) — on continue."
          fi

      - name: Gradle permissions
        run: chmod +x android/gradlew

      - name: Build Debug APK
        run: cd android && ./gradlew --no-daemon assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: skilldrive-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
